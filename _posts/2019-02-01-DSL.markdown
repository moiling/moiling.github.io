---
layout:     post
title:      "对话脚本语言(DSL)使用文档"
subtitle:   "当前版本：v0.3"
date:       2019-02-01
author:     "moiling"
header-img: "/img/post_dsl.jpg"
tags:
    - DSL
---

## 一、写在前面

* **格式: 「纯文本」**格式
> 编写时**请勿「Word」**之类带修饰的文本编辑器
> 最简单使用Windows自带的记事本即可
推荐使用「 [**Sublime**](http://www.sublimetext.com/)」进行编写(后期我可能会编写语法高亮插件)
* **符号: 「英文半角」**，如数组的分隔符为英文的 `,` 而非中文的 `，`  
* **编码:** 保存时请保存为 `UTF-8` 编码,其他编码在Unity中无法正常显示中文
* **后缀:** 文件后缀名为 `.txt`  (暂时这么做就好,这个之后要修改也方便)

## 二、Hello World

在介绍脚本的格式和属性之前，先给出一个简单的例子。

```
#tag 段标志
@char 张三
这是一行对话。{p}
```

该脚本内容意为「张三说: “这是一行对话。”，并且把这一段的标志设为“段标志”」。

## 三、脚本格式

脚本格式分为**「标签部分」**和**「正文部分」**，并按照换页操作和选择操作进行**「分段」。**

### 3.1 分段

**「分段的目的」**是为了给不同的对话设置不同的「属性」，如说话人物、特效、跳转标签等。故**「分段的依据」**是「界面变化」，而引起「界面变化」的有: **换页**、**显示选择支**、**做出选择**。脚本是按段来组织的，段之间就像顺序执行的函数，要把段作为「独立的整体」来看待。

```
//-------- 第一段 --------
@char RANG
你好。{p}

//---- 换页造成的第二段 ----
再见。

//-- 显示选择支造成的第三段 --
{
	再见。:@end
	不再见。:@jump TAG_0
}

//--- 做出选择造成的第四段 --
#tag 段标志
@char ZHOU
不再见。{p}
```

### 3.2 标签

标签作为正文的修饰，在每一个段中，「标签部分」位于「正文部分」的**前面**。<br /><br />
#### 3.2.1 分类
按**「标签类型」**可以分为**「@标签」**和**「#标签」**。<br /><br /><br />**「@标签」**为每段只能设置一次的标签，该标签不仅影响当前段，而且会影响之后的段，如: **设置说话人**、**设置背景音乐**、**跳转**等操作。
> 若一段出现了多个标签名相同的@标签，则只运行最后出现的标签。
> 若该段未设置相应的@标签，则沿用之前段的值，如[3.1例子](https://www.yuque.com/ootaru/code_documents/190127#47edff2c)中第二段未设置@char，将沿用第一段中@char的值RANG，继续是阿让说话。<br />设置@标签后会将之前段已经设置的对应@标签的值给覆盖，如[3.1例子](https://www.yuque.com/ootaru/code_documents/190127#47edff2c)中第四段设置@char为ZHOU，就会将之前设置的RANG给覆盖。
<br /><br />**「#标签」**为每段可以多次设置的标签，且该标签只影响当前段，如: **设置TAG**、**运行事件**、**设置属性值**等。

#### 3.2.2 格式
每个标签**「独占一行」**，格式为**「标签类型符」+「标签名」+「空格」+「属性**」，如:<br /><br /><br />`@char RANG` <br />(@为标签类型符、char为标签名、RANG为属性)

#### 3.2.3 多属性
标签最多可以有**两个属性**，如 `#set BOOK 1` ，属性之间也使用**「空格」**隔开。<br />最少可以没有属性，如 `@end` 标签。

#### 3.2.4 数组
如果想给一个段设置多个相同的标签，按标签类型分为两种情况。<br />**「#标签」**很简单，其本身就支持多次设置，故只需要多些几行即可，如:

```
#set BOOK 1
#set COIN 100
```

**「@标签」**由于是不支持多次设置的，如果想要实现多个人物同时出现在场景中，或者多个人一起说话就要使用**「数组格式」**了，如我想要让角色A和B同时说话，界面上显示玩家A在左边，玩家B和玩家C在右边，可以进行一下操作:<br /><br />
```
@char A,B //@说话角色 A,B
@face A_NORMAL,B_NORMAL,C_NORMAL L,R,R //@人物头像 A普通表情,B普通表情,C普通表情 左边,右边,右边
```

这里需要注意的有:
* 数组用**「英文逗号」`,` **隔开，最后一项后可不加，并且**中间不允许添加「空格」**
* 数组为**每个属性一个数组**，属性之间还是使用「空格」隔开，千万不要写成:

```
@face A_NORMAL L,B_NORMAL R,C_NORMAL R //@人物头像 A普通表情 左边,B普通表情 右边,C普通表情 右边
```

> 读到这里可能会有一个疑问，为什么要弄这么麻烦分两种标签，v0.1不是只有@一种吗。
> 嗯，主要是因为上次例会说会出现多个角色在窗口上，想到脚本中没有考虑到如果有多个相同对象怎么处理。
> 其实只用一种也是可以的，设置两种标签就是为了将是否可以在一段中重复设置值给区分出来，在编写的时候不至于记混，现在看到@就知道只能设置一次，看到#就知道可以多次设置了。
> <br />
> 那为什么要规定只能设置一次呢，像这个数组的例子很明显char和face是有设置多次的需求的。
> 其实将char和face设置多次也是可行的，但是会造成一个非常麻烦的事情，就是在更换人物的时候该怎么更换呢。
> 比如一开始A、B两人都出现，说了很多段话，现在B走了只剩下A，标签该怎么处理呢。
> 当然是少写一行@char B就行了呀。
> 没错，如果当前段只有@char A的话就只会显示一个人，看起来很方便，但是这意味着每一段都得设置@char了，不设置的话就表示这段话不会显示任何人物(A和B都走了)，这样会增加很多工作量，所以我没选择这样的方法。
> 
> 还有一种解决方案就是把设置变成@add_char和@remove_char，当添加的时候设置@add_char，移除的时候设置@remove_char。
> 嗯，听起来也很不错，但是又会有一个新的麻烦，就是每次换说话角色和换角色表情的时候需要两句话了，需要先remove再add，而切换说话角色和表情是个非常频繁的操作，就显得特别啰嗦。
> <br />
> 最后，还有一个比较方便也节省我修改工作的就是添加字段，比如需要两个人就在加一个@second_char。但这样就限制了数量了，自由度不够，比如要显示五六个人还不得加五六个字段吗……


### 3.3 正文

正文内容分为两类，**「对话」**和**「选择支」**。<br />
#### 3.3.1 对话
普通对话不需要任何标签修饰，脚本中的**「换行」**即为游戏中的**「换行」**，请勿随意换行**。**<br />对话中可以插入**「对话内部标签」**，分为**「操作标签」**和**「样式标签」**。<br /><br />**「操作标签」**以`{` 和`}` 包裹，如换页标签`{p}` ，执行到标签时等待玩家的操作，玩家完成相应操作后继续执行。<br />「操作标签」的末尾可以添加一个**「跳转事件」**，格式为**「{」+「标签」+「@」+「跳转」+「}」**，其中「跳转」为了简化标签只用指定跳转的「对话脚本」和「TAG」即可，如: <br />`{p@TAG STAGE}` <br />(p为标签，TAG为跳转到的段标志，STAGE为跳转到的对话脚本)

如果在当前对话脚本中跳转则可以省略「对话脚本」，写作`{p@TAG}` 。

**「样式标签」**用来修改局部文字的样式，待修改的文字由样式标签包裹，如:

```html
把后面的字体加粗，<b>被加粗的字体</b>。
```

> 这部分直接使用了Unity的富文本标签，要我设计的话也是这样的，因为必须要把改变的文字包裹起来，所以必须要有这样的开始标签和结束标签，这是不可避免的****。****


### 3.4 选择支

「选择支」以`{` 和`}` 包裹，但和「对话」中的「操作标签」不同的是 ，「选择支」的`{` 、`}`都是独占一行的。「选择支」由**「标签域」**和**「选项域」**组成 。与对话正文相同 ，「标签域」在「选项域」**前面**，并且「标签域」的格式与对话正文相同。

```
{ // 独占一行
	标签域
	选项域
} // 独占一行
```
<br /><br />「选项域」由选项数组构成，用「英文逗号」**`,` **隔开，最后一项后可不加。每个选项由**「选项名称」**和**「选项标签」**构成，两者用「英文冒号」`:` 。格式为:<br /><br /><br />选项名称1:选项标签1,选项名称2:选择标签2 <br />(注意**`,` **左右和`:` 左右不能添加空格)<br /><br /><br />「选项标签」和「外部标签」的格式相同，但是只可接部分「@标签」，不可接「#标签」(后面表格会标注)。<br />如果想要在选项框出现时，**对话框中保留文字**的话，可以删除对话框前「正文内容」末尾的`{p}` ，即不换页，对话框的内容就会保留下来，完整例子如下: 

```
出现选项时对话框显示的文本。
{
	@bgm 背景音乐标记
	选项1:@jump 段标志,
	选项2:@end,
	选项3:@source 段标志 脚本文件标志
}
```

### 3.5 注释

在脚本中可以使用**「注释」**，不会影响脚本解析，格式为**「//」+ 「注释内容」**

```
#set BOOK 1   // 设置书本的值为1，此处为注释内容，不会被解析
#set COIN 100 // 注意在每行“//”后的内容都会变成注释，请不要在注释内容后添加脚本内容
```

## 四、标签类型

### 4.1 @标签

| **标签名** | **参数一** | **参数二** | **说明** | **备注** |
| :---: | :---: | :---: | :---: | :---: |
| char | 角色标志 |  | 指定说话角色 | 标志会统一制定好，比如「阿让」的标志是「RANG」，之后的所有标志都一样会制定一个标准<br />若不想指定说话角色，使用第三人称旁白模式，可以指定角色标志为「none」，@char none，同理之后所有的标志也一样，都有一个none标志 |
| name | 名字 |  | 指定说话角色名称 | 不使用该标签时会默认使用@char设定的角色的默认名称，该标签主要用于覆盖默认名称，如遇见不认识角色时名字变为「???」 |
| face | 表情标志 | 位置(L&R)<br />**缺省值为L** | 指定表情 | L表示表情头像显示在左边，R表示表情显示在右边，如果有多个同位置的表情，则按顺序从左右往中间摆放，如@face A,B L,L<br />表示A、B都显示在左边，但A在B的前面，说明A在最左边，B靠近中间 |
| voice | 语音标志 |  | 指定对话语音 |  |
| bgm | 音乐标志 |  | 指定背景音乐 |  |
| sound | 音效标志 |  | 指定音效 |  |
| jump | 跳转位置的TAG |  | 跳转到当前脚本文件的某个标志处 | 此TAG为自己添加的TAG名称<br />**可用在选项后** |
| source | 跳转位置的TAG | 跳转文件的标志 | 跳转到其他脚本文件的某个标志处 | **可用在选项后** |
| fx | 特效标签 |  | 设置特效 |  |
| cg | cg标签 |  | 设置cg | 注意，请在需要关闭cg的段前指定@cg none |
| if | 参数名 | 参数值 | 判断当前段是否执行 | 一定要注意行文逻辑关系 |
| end |  |  | 关闭当前对话 | 默认执行到文件的末尾会自动关闭，该标签用于提前关闭对话框<br />**可用在{p}标签后**<br />**可用在选项后** |
| none |  |  | 什么都不做 | 对，就是什么都不做，用于放在不做任何操作和任何跳转的选择支后面<br />**可用在选项后** |



### 4.2 #标签

| **标签名** | **参数一** | **参数二** | **说明** | **备注** |
| :---: | :---: | :---: | :---: | :---: |
| tag | TAG标志 | 段介绍<br />(可缺省) | 设置段TAG | 在该段保存时，会将段介绍显示在存档列表中<br />(tag标记过的段最好将所有属性都设置一遍，因为无法判断它是从哪跳转过来的，不知道它的上一段是怎样的情况) |
| set | 参数名 | 参数值 | 给参数设置值 | 比如对话时获得一串钥匙，就可以使用@set KEY 1来修改参数，或者改变关卡的其他状态来推进关卡的运行<br />参数值可以添加表达式，如"+1"、"-1"等，在原有数值上修改，如果只设置值，将会直接覆盖原有数值 |
| do | 方法标志 |  | 执行某段方法 | 比如选择某个选项后需要打开新的界面，这类需要程序来做的事情就使用该标签指定将要执行的方法，将具体操作交给程序其他模块运行 |
| item | 道具标志 |  | 出示道具 | 一段可以设置多个出示道具，顺序显示 |



### 4.3 对话内部标签
#### 4.3.1 操作标签

| **标签格式** | **说明** | **备注** |
| :---: | :---: | :---: |
| {s} | 断句操作，需要玩家继续点击显示之后的文本内容，但不会换到下一个对话框 | 如果在{s}后换行了，之后的内容会在下一行出现，始终记住脚本中换行就等于游戏对话的换行 |
| {p} | 换页，需要玩家继续点击换到下一个对话框显示新的内容 | p标签后可接跳转的TAG或end标签在脚本读取结束前强行结束对话<br />如"{p@TAG_0}"、<br />"{p@TAG_0 STAGE_0}"、<br />"{p@end}" |


#### 4.3.2 样式标签

| **标签格式** | **说明** |
| :---: | :---: |
| 正常文本**<b>变化文本</b>**正常文本 | 加粗 |
| 正常文本**<i>**_变化文本_**</i>**正常文本 | 斜体 |
| 正常文本**<size=18>**变化文本**</b>**正常文本 | 字号 |
| 正常文本**<color=#F07842>**变化文本**</b>**正常文本 | 颜色 |
| <i>_字<b>_**_字字字_**_</b>字_</i> | 嵌套使用<br />(开始的顺序和结束的顺序要相反，不能出现形如"<i>字<b>字</i>字</b>"的情况) |


